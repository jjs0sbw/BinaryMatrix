var search_data = {"index":{"searchIndex":["binarymatrix","add()","boolean_add()","boolean_multiply()","boolean_subtract()","compress()","enter_cell_content()","expand()","new()"],"longSearchIndex":["binarymatrix","binarymatrix#add()","binarymatrix#boolean_add()","binarymatrix#boolean_multiply()","binarymatrix#boolean_subtract()","binarymatrix#compress()","binarymatrix#enter_cell_content()","binarymatrix#expand()","binarymatrix::new()"],"info":[["BinaryMatrix","","BinaryMatrix.html","","<p>Binary matrix class for Warfield Augumented Boolean Logic\n<p>This program creates an initial binary matrix …\n"],["add","BinaryMatrix","BinaryMatrix.html#method-i-add","(matrix = bm)","<p>Adds together all the values in the binary matrix (sum all values)\n<p><code>matrix</code> - The matrix containing the …\n\n"],["boolean_add","BinaryMatrix","BinaryMatrix.html#method-i-boolean_add","(matrix_one, matrix_two)","<p>Sums the contents from the same cell in each matrix.  Returning a matrix\nwith the values.\n<p><code>matrix_one</code>  …\n"],["boolean_multiply","BinaryMatrix","BinaryMatrix.html#method-i-boolean_multiply","(matrix_one, matrix_two)","<p>Multiplies matrix_one by matrix_two.  Provides a Boolean result\n<p><code>matrix_one</code> The first matrix to be multiplied. …\n"],["boolean_subtract","BinaryMatrix","BinaryMatrix.html#method-i-boolean_subtract","(matrix_one, matrix_two)","<p>Subtracts matrix_two from matrix_one.  Must be careful to use this\ncorrectly.\n<p><code>matrix_one</code> The first matrix …\n"],["compress","BinaryMatrix","BinaryMatrix.html#method-i-compress","(index_1, index_2, matrix = bm, matrix_index = bmi.mi)","<p>Compress the matrix by merging rows and colunms at index_2 with index_1.\n<p><code>index_1</code> The matrix index of the …\n"],["enter_cell_content","BinaryMatrix","BinaryMatrix.html#method-i-enter_cell_content","(index_1, index_2, number = 1, matrix = bm, matrix_in = bmi.mi)","<p>Enters a 1 into the selected matrix cell.\n<p><code>index_1</code> The first cell index\n<p><code>index_2</code> The second cell index\n"],["expand","BinaryMatrix","BinaryMatrix.html#method-i-expand","(matrix, index_1)","<p>Expands the selecred matrix by one row and colunm at selected index\n<p><code>matrix</code> The matrix to be expanded\n<p><code>index_1</code> …\n"],["new","BinaryMatrix","BinaryMatrix.html#method-c-new","(size)","<p>Create the initial binary matrix filled with zeros of size (size by size).\n<p>Create the initial binary matrix …\n"]]}}